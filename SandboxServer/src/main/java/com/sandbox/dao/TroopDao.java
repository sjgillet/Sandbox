package com.sandbox.dao;

import static com.sandbox.util.Close.close;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.query.Query;

import com.sandbox.model.Troop;
import com.sandbox.util.HibernateUtil;

public class TroopDao {

	private static TroopDao td;

	public static TroopDao getTroopDao() {
		if(td == null)
			td = new TroopDao(); 
		return td;
	}

	private TroopDao() {
	}

	/**
	 * Inserts the given Troop object into the database, returning the id of the 
	 * troop generated by hibernate if the insertion was successful
	 * @param t - The troop object to be inserted
	 * @return - the id of the troop inserted, as generated by hibernate
	 */
	public Long insertTroop(Troop t) {
		Session session = HibernateUtil.getSession();
		Transaction tx = null; 
		Long id = -1L; 
		try {
			tx = session.beginTransaction();
			id = (Long) session.save(t); 
			tx.commit();
		}
		catch(HibernateException e) {
			e.printStackTrace();
			tx.rollback();
		}
		finally {
			close(session);
		}
		
		return id; 
	}

	/**
	 * Returns a Troop object matching one in the database whose troopName equals
	 * the given string
	 * @param name - troopName of the Troop object to search for
	 * @return - The Troop matching the search, null if not found. 
	 */
	public Troop getTroopByName(String name) {
		Session session = HibernateUtil.getSession();
		Troop t = null;
		try {
			String hql = "FROM Troop where troop_name = :name";
			Query query = session.createQuery(hql); 
			query.setParameter("name", name); 
			t = (Troop)query.uniqueResult();
		}
		catch(HibernateException e) {
			e.printStackTrace();
		}

		return t; 
	}

}
