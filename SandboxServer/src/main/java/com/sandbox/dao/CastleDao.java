package com.sandbox.dao;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.sandbox.model.Castle;
import com.sandbox.util.HibernateUtil;

import static com.sandbox.util.Close.close;

public class CastleDao {

	private static CastleDao cd;

	public static CastleDao getCastleDao() {
		if(cd == null)
			cd = new CastleDao(); 
		return cd; 
	}

	private CastleDao() {

	}

	/**
	 * Inserts the given Castle object into the database, returning
	 * the Id generated by hibernate if successful
	 * @param c - the Castle object to be inserted
	 * @return - the generated Id of the Castle object after successful insertion
	 */
	public Long insertCastle(Castle c) {
		Session session = HibernateUtil.getSession(); 
		Transaction tx = null; 
		Long id = -1L;
		//attempt insertion
		try {
			tx = session.beginTransaction();
			id = (Long)session.save(c); 
			tx.commit(); 
		}
		//insertion failure, rollback the attempt
		catch(HibernateException e) {
			e.printStackTrace();
			tx.rollback(); 
		}
		//close the session on success or failure
		finally {
			close(session); 
		}


		return id;
	}

	/**
	 * Returns the Castle object from the database whose Id matches the given int, or null
	 * if not found
	 * @param id - the Id of the Castle object to search for
	 * @return - the Castle object whose Id matches the given int, or null if not found.
	 */
	public Castle getCastleById(int id) {
		Session session = HibernateUtil.getSession();
		Castle c = null; 
		try {
			c = (Castle)session.get(Castle.class, id);
		}
		catch(HibernateException e ) {
			e.printStackTrace();
		}
		return c; 
	}




}
